name: Automatic Releases workflow sample
on:  
  # workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
jobs:
  test:
    name: "Test the application"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore
        working-directory: src
      - name: Build
        run: dotnet build
        working-directory: src
      - name: Test with the dotnet CLI
        run: dotnet test
        working-directory: src
  
  print-status:
    name: logs
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Print values
        run: |
          echo ${{ github.ref }}
          echo ${{ github.event_name }}
          ${{ github.event.pull_request.merged }}

  create-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.pull_request.merged == true
    name: "Create release"
    needs: test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout
        uses: actions/checkout@v3
      - name: Conventional Changelog Action
        id: changelog 
        uses: TriPSs/conventional-changelog-action@v3 
        with: 
          github-token: ${{ secrets.github_token }}
          output-file: "false" 
      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }} 
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ steps.changelog.outputs.tag }} 
          release_name: ${{ steps.changelog.outputs.tag }} 
          body: ${{ steps.changelog.outputs.clean_changelog }}
      
  publish-package:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Add your test steps here if needed...
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/primo391981/${{ vars.DEPARTMENT }}/${{ vars.APPLICATION_NAME }}
          tags: type=semver,pattern={{version}},value=${{ steps.changelog.outputs.tag }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
        
        
 
     